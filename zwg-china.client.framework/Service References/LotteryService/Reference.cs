//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34003
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace zwg_china.client.framework.LotteryService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportBase", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetPageListImportBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetPageListImportBaseOfLottery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetBettingsImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetChasingsImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.ImportBaseOfLottery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetLotteriesImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetTopBonusImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.BetImpoert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.RecallBettingImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.RecallChassingImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetTicketsImport))]
    public partial class ImportBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPageListImportBase", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetPageListImportBaseOfLottery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetBettingsImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetChasingsImport))]
    public partial class GetPageListImportBase : zwg_china.client.framework.LotteryService.ImportBase {
        
        private int PageIndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPageListImportBaseOfLottery", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetBettingsImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetChasingsImport))]
    public partial class GetPageListImportBaseOfLottery : zwg_china.client.framework.LotteryService.GetPageListImportBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBettingsImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class GetBettingsImport : zwg_china.client.framework.LotteryService.GetPageListImportBaseOfLottery {
        
        private System.Nullable<System.DateTime> BeginTimeField;
        
        private System.Nullable<System.DateTime> EndTimeField;
        
        private System.Nullable<zwg_china.client.framework.LotteryService.BettingStatus> StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((this.BeginTimeField.Equals(value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<zwg_china.client.framework.LotteryService.BettingStatus> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetChasingsImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class GetChasingsImport : zwg_china.client.framework.LotteryService.GetPageListImportBaseOfLottery {
        
        private System.Nullable<System.DateTime> BeginTimeField;
        
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((this.BeginTimeField.Equals(value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportBaseOfLottery", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetLotteriesImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetTopBonusImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.BetImpoert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.RecallBettingImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.RecallChassingImport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.GetTicketsImport))]
    public partial class ImportBaseOfLottery : zwg_china.client.framework.LotteryService.ImportBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLotteriesImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class GetLotteriesImport : zwg_china.client.framework.LotteryService.ImportBaseOfLottery {
        
        private int CountField;
        
        private int TicketIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTopBonusImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class GetTopBonusImport : zwg_china.client.framework.LotteryService.ImportBaseOfLottery {
        
        private int NotesField;
        
        private System.Nullable<int> TicketIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((this.NotesField.Equals(value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BetImpoert", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class BetImpoert : zwg_china.client.framework.LotteryService.ImportBaseOfLottery {
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BettingWithChasingImport> BettingWithChasingsField;
        
        private int HowToPlayIdField;
        
        private string IssueField;
        
        private double MultipleField;
        
        private double PointsField;
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BetSeatImport> SeatsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BettingWithChasingImport> BettingWithChasings {
            get {
                return this.BettingWithChasingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BettingWithChasingsField, value) != true)) {
                    this.BettingWithChasingsField = value;
                    this.RaisePropertyChanged("BettingWithChasings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HowToPlayId {
            get {
                return this.HowToPlayIdField;
            }
            set {
                if ((this.HowToPlayIdField.Equals(value) != true)) {
                    this.HowToPlayIdField = value;
                    this.RaisePropertyChanged("HowToPlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BetSeatImport> Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecallBettingImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class RecallBettingImport : zwg_china.client.framework.LotteryService.ImportBaseOfLottery {
        
        private int BettingIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BettingId {
            get {
                return this.BettingIdField;
            }
            set {
                if ((this.BettingIdField.Equals(value) != true)) {
                    this.BettingIdField = value;
                    this.RaisePropertyChanged("BettingId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecallChassingImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class RecallChassingImport : zwg_china.client.framework.LotteryService.ImportBaseOfLottery {
        
        private int ChasingIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChasingId {
            get {
                return this.ChasingIdField;
            }
            set {
                if ((this.ChasingIdField.Equals(value) != true)) {
                    this.ChasingIdField = value;
                    this.RaisePropertyChanged("ChasingId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTicketsImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class GetTicketsImport : zwg_china.client.framework.LotteryService.ImportBaseOfLottery {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingStatus", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.model")]
    public enum BettingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        用户撤单 = -2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未中奖 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        等待开奖 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        即将开奖 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        中奖 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingWithChasingImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class BettingWithChasingImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IssueField;
        
        private double MultipleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BetSeatImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class BetSeatImport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string SeatNmaeField;
        
        private string ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeatNmae {
            get {
                return this.SeatNmaeField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatNmaeField, value) != true)) {
                    this.SeatNmaeField = value;
                    this.RaisePropertyChanged("SeatNmae");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalResult", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4))]
    public partial class NormalResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalResultOfArrayOfLotteryExport1C_S7RQu4", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    public partial class NormalResultOfArrayOfLotteryExport1C_S7RQu4 : zwg_china.client.framework.LotteryService.NormalResult {
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.LotteryExport> InfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.LotteryExport> Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalResultOfArrayOfTopBonus1C_S7RQu4", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    public partial class NormalResultOfArrayOfTopBonus1C_S7RQu4 : zwg_china.client.framework.LotteryService.NormalResult {
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.TopBonus> InfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.TopBonus> Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageResultOfBettingExport1C_S7RQu4", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    public partial class PageResultOfBettingExport1C_S7RQu4 : zwg_china.client.framework.LotteryService.NormalResult {
        
        private int CountOfAllMessageField;
        
        private int CountOfPageField;
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BettingExport> ListField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfAllMessage {
            get {
                return this.CountOfAllMessageField;
            }
            set {
                if ((this.CountOfAllMessageField.Equals(value) != true)) {
                    this.CountOfAllMessageField = value;
                    this.RaisePropertyChanged("CountOfAllMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfPage {
            get {
                return this.CountOfPageField;
            }
            set {
                if ((this.CountOfPageField.Equals(value) != true)) {
                    this.CountOfPageField = value;
                    this.RaisePropertyChanged("CountOfPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BettingExport> List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageResultOfChasingExport1C_S7RQu4", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    public partial class PageResultOfChasingExport1C_S7RQu4 : zwg_china.client.framework.LotteryService.NormalResult {
        
        private int CountOfAllMessageField;
        
        private int CountOfPageField;
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.ChasingExport> ListField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfAllMessage {
            get {
                return this.CountOfAllMessageField;
            }
            set {
                if ((this.CountOfAllMessageField.Equals(value) != true)) {
                    this.CountOfAllMessageField = value;
                    this.RaisePropertyChanged("CountOfAllMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfPage {
            get {
                return this.CountOfPageField;
            }
            set {
                if ((this.CountOfPageField.Equals(value) != true)) {
                    this.CountOfPageField = value;
                    this.RaisePropertyChanged("CountOfPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.ChasingExport> List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    public partial class NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4 : zwg_china.client.framework.LotteryService.NormalResult {
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.LotteryTicketExport> InfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.LotteryTicketExport> Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotteryTicketExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class LotteryTicketExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountOfNUmField;
        
        private int FirstNumField;
        
        private string FormatOfIssueField;
        
        private int IdField;
        
        private int InstallmentsField;
        
        private string IssueField;
        
        private string LotteryValuesField;
        
        private string NameField;
        
        private string NextIssueField;
        
        private System.DateTime NextLotteryTimeField;
        
        private int OrderField;
        
        private string SeatsField;
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.PlayTagExport> TagsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfNUm {
            get {
                return this.CountOfNUmField;
            }
            set {
                if ((this.CountOfNUmField.Equals(value) != true)) {
                    this.CountOfNUmField = value;
                    this.RaisePropertyChanged("CountOfNUm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstNum {
            get {
                return this.FirstNumField;
            }
            set {
                if ((this.FirstNumField.Equals(value) != true)) {
                    this.FirstNumField = value;
                    this.RaisePropertyChanged("FirstNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatOfIssue {
            get {
                return this.FormatOfIssueField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatOfIssueField, value) != true)) {
                    this.FormatOfIssueField = value;
                    this.RaisePropertyChanged("FormatOfIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Installments {
            get {
                return this.InstallmentsField;
            }
            set {
                if ((this.InstallmentsField.Equals(value) != true)) {
                    this.InstallmentsField = value;
                    this.RaisePropertyChanged("Installments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotteryValues {
            get {
                return this.LotteryValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.LotteryValuesField, value) != true)) {
                    this.LotteryValuesField = value;
                    this.RaisePropertyChanged("LotteryValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextIssue {
            get {
                return this.NextIssueField;
            }
            set {
                if ((object.ReferenceEquals(this.NextIssueField, value) != true)) {
                    this.NextIssueField = value;
                    this.RaisePropertyChanged("NextIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextLotteryTime {
            get {
                return this.NextLotteryTimeField;
            }
            set {
                if ((this.NextLotteryTimeField.Equals(value) != true)) {
                    this.NextLotteryTimeField = value;
                    this.RaisePropertyChanged("NextLotteryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.PlayTagExport> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotteryExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class LotteryExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IssueField;
        
        private string TicketField;
        
        private int TicketIdField;
        
        private string valuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string values {
            get {
                return this.valuesField;
            }
            set {
                if ((object.ReferenceEquals(this.valuesField, value) != true)) {
                    this.valuesField = value;
                    this.RaisePropertyChanged("values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TopBonus", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class TopBonus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IssueField;
        
        private double SumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class BettingExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double BonusField;
        
        private System.DateTime CreatedTimeField;
        
        private string HowToPlayField;
        
        private int IdField;
        
        private string IssueField;
        
        private string LotteryValueField;
        
        private double MultipleField;
        
        private int NotesField;
        
        private string OwnerField;
        
        private int OwnerIdField;
        
        private double PayField;
        
        private string PlayTagField;
        
        private double PointsField;
        
        private zwg_china.client.framework.LotteryService.BettingStatus StatusField;
        
        private string TicketField;
        
        private string valuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HowToPlay {
            get {
                return this.HowToPlayField;
            }
            set {
                if ((object.ReferenceEquals(this.HowToPlayField, value) != true)) {
                    this.HowToPlayField = value;
                    this.RaisePropertyChanged("HowToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotteryValue {
            get {
                return this.LotteryValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LotteryValueField, value) != true)) {
                    this.LotteryValueField = value;
                    this.RaisePropertyChanged("LotteryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((this.NotesField.Equals(value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pay {
            get {
                return this.PayField;
            }
            set {
                if ((this.PayField.Equals(value) != true)) {
                    this.PayField = value;
                    this.RaisePropertyChanged("Pay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayTag {
            get {
                return this.PlayTagField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayTagField, value) != true)) {
                    this.PlayTagField = value;
                    this.RaisePropertyChanged("PlayTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public zwg_china.client.framework.LotteryService.BettingStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string values {
            get {
                return this.valuesField;
            }
            set {
                if ((object.ReferenceEquals(this.valuesField, value) != true)) {
                    this.valuesField = value;
                    this.RaisePropertyChanged("values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChasingExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class ChasingExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BettingWithChasingExport> BettingsField;
        
        private double BonusField;
        
        private int ContinuanceField;
        
        private System.DateTime CreatedTimeField;
        
        private string HowToPlayField;
        
        private int IdField;
        
        private int NotesField;
        
        private string OwnerField;
        
        private int OwnerIdField;
        
        private double PayField;
        
        private string PlayTagField;
        
        private double PointsField;
        
        private string StartIssueField;
        
        private zwg_china.client.framework.LotteryService.ChasingStatus StatusField;
        
        private string TicketField;
        
        private string ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.BettingWithChasingExport> Bettings {
            get {
                return this.BettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BettingsField, value) != true)) {
                    this.BettingsField = value;
                    this.RaisePropertyChanged("Bettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Continuance {
            get {
                return this.ContinuanceField;
            }
            set {
                if ((this.ContinuanceField.Equals(value) != true)) {
                    this.ContinuanceField = value;
                    this.RaisePropertyChanged("Continuance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HowToPlay {
            get {
                return this.HowToPlayField;
            }
            set {
                if ((object.ReferenceEquals(this.HowToPlayField, value) != true)) {
                    this.HowToPlayField = value;
                    this.RaisePropertyChanged("HowToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((this.NotesField.Equals(value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pay {
            get {
                return this.PayField;
            }
            set {
                if ((this.PayField.Equals(value) != true)) {
                    this.PayField = value;
                    this.RaisePropertyChanged("Pay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayTag {
            get {
                return this.PlayTagField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayTagField, value) != true)) {
                    this.PlayTagField = value;
                    this.RaisePropertyChanged("PlayTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartIssue {
            get {
                return this.StartIssueField;
            }
            set {
                if ((object.ReferenceEquals(this.StartIssueField, value) != true)) {
                    this.StartIssueField = value;
                    this.RaisePropertyChanged("StartIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public zwg_china.client.framework.LotteryService.ChasingStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BettingWithChasingExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class BettingWithChasingExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double BonusField;
        
        private int IdField;
        
        private string IssueField;
        
        private string LotteryValueField;
        
        private double MultipleField;
        
        private double PayField;
        
        private zwg_china.client.framework.LotteryService.BettingStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotteryValue {
            get {
                return this.LotteryValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LotteryValueField, value) != true)) {
                    this.LotteryValueField = value;
                    this.RaisePropertyChanged("LotteryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pay {
            get {
                return this.PayField;
            }
            set {
                if ((this.PayField.Equals(value) != true)) {
                    this.PayField = value;
                    this.RaisePropertyChanged("Pay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public zwg_china.client.framework.LotteryService.BettingStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChasingStatus", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.model")]
    public enum ChasingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        用户中止追号 = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未开始 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        追号中 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        即将结束 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        追号结束 = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayTagExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class PlayTagExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<zwg_china.client.framework.LotteryService.HowToPlayExport> HowToPlaysField;
        
        private int IdField;
        
        private string NameField;
        
        private int OrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.LotteryService.HowToPlayExport> HowToPlays {
            get {
                return this.HowToPlaysField;
            }
            set {
                if ((object.ReferenceEquals(this.HowToPlaysField, value) != true)) {
                    this.HowToPlaysField = value;
                    this.RaisePropertyChanged("HowToPlays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HowToPlayExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class HowToPlayExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowFreeSeatsField;
        
        private int CapsCountOfDifferentSeatsForWinField;
        
        private int CapsSeatsField;
        
        private int CountOfSeatsForWinField;
        
        private int IdField;
        
        private zwg_china.client.framework.LotteryService.LotteryInterface InterfaceField;
        
        private bool IsDuplexField;
        
        private int LowerCountOfDifferentSeatsForWinField;
        
        private int LowerSeatsField;
        
        private string NameField;
        
        private double OddsField;
        
        private string OptionalSeatsField;
        
        private int OrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowFreeSeats {
            get {
                return this.AllowFreeSeatsField;
            }
            set {
                if ((this.AllowFreeSeatsField.Equals(value) != true)) {
                    this.AllowFreeSeatsField = value;
                    this.RaisePropertyChanged("AllowFreeSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapsCountOfDifferentSeatsForWin {
            get {
                return this.CapsCountOfDifferentSeatsForWinField;
            }
            set {
                if ((this.CapsCountOfDifferentSeatsForWinField.Equals(value) != true)) {
                    this.CapsCountOfDifferentSeatsForWinField = value;
                    this.RaisePropertyChanged("CapsCountOfDifferentSeatsForWin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapsSeats {
            get {
                return this.CapsSeatsField;
            }
            set {
                if ((this.CapsSeatsField.Equals(value) != true)) {
                    this.CapsSeatsField = value;
                    this.RaisePropertyChanged("CapsSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountOfSeatsForWin {
            get {
                return this.CountOfSeatsForWinField;
            }
            set {
                if ((this.CountOfSeatsForWinField.Equals(value) != true)) {
                    this.CountOfSeatsForWinField = value;
                    this.RaisePropertyChanged("CountOfSeatsForWin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public zwg_china.client.framework.LotteryService.LotteryInterface Interface {
            get {
                return this.InterfaceField;
            }
            set {
                if ((this.InterfaceField.Equals(value) != true)) {
                    this.InterfaceField = value;
                    this.RaisePropertyChanged("Interface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDuplex {
            get {
                return this.IsDuplexField;
            }
            set {
                if ((this.IsDuplexField.Equals(value) != true)) {
                    this.IsDuplexField = value;
                    this.RaisePropertyChanged("IsDuplex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowerCountOfDifferentSeatsForWin {
            get {
                return this.LowerCountOfDifferentSeatsForWinField;
            }
            set {
                if ((this.LowerCountOfDifferentSeatsForWinField.Equals(value) != true)) {
                    this.LowerCountOfDifferentSeatsForWinField = value;
                    this.RaisePropertyChanged("LowerCountOfDifferentSeatsForWin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowerSeats {
            get {
                return this.LowerSeatsField;
            }
            set {
                if ((this.LowerSeatsField.Equals(value) != true)) {
                    this.LowerSeatsField = value;
                    this.RaisePropertyChanged("LowerSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Odds {
            get {
                return this.OddsField;
            }
            set {
                if ((this.OddsField.Equals(value) != true)) {
                    this.OddsField = value;
                    this.RaisePropertyChanged("Odds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptionalSeats {
            get {
                return this.OptionalSeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionalSeatsField, value) != true)) {
                    this.OptionalSeatsField = value;
                    this.RaisePropertyChanged("OptionalSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LotteryInterface", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.model")]
    public enum LotteryInterface : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N直选 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N组选 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N不定位 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        任N定位胆 = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LotteryService.ILotteryService")]
    public interface ILotteryService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/GetTickets", ReplyAction="http://tempuri.org/ILotteryService/GetTicketsResponse")]
        System.IAsyncResult BeginGetTickets(zwg_china.client.framework.LotteryService.GetTicketsImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4 EndGetTickets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/GetLotteries", ReplyAction="http://tempuri.org/ILotteryService/GetLotteriesResponse")]
        System.IAsyncResult BeginGetLotteries(zwg_china.client.framework.LotteryService.GetLotteriesImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4 EndGetLotteries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/GetTopBonus", ReplyAction="http://tempuri.org/ILotteryService/GetTopBonusResponse")]
        System.IAsyncResult BeginGetTopBonus(zwg_china.client.framework.LotteryService.GetTopBonusImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4 EndGetTopBonus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/GetBettings", ReplyAction="http://tempuri.org/ILotteryService/GetBettingsResponse")]
        System.IAsyncResult BeginGetBettings(zwg_china.client.framework.LotteryService.GetBettingsImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4 EndGetBettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/GetChasings", ReplyAction="http://tempuri.org/ILotteryService/GetChasingsResponse")]
        System.IAsyncResult BeginGetChasings(zwg_china.client.framework.LotteryService.GetChasingsImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4 EndGetChasings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/Bet", ReplyAction="http://tempuri.org/ILotteryService/BetResponse")]
        System.IAsyncResult BeginBet(zwg_china.client.framework.LotteryService.BetImpoert import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.NormalResult EndBet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/RecallBetting", ReplyAction="http://tempuri.org/ILotteryService/RecallBettingResponse")]
        System.IAsyncResult BeginRecallBetting(zwg_china.client.framework.LotteryService.RecallBettingImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.NormalResult EndRecallBetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILotteryService/RecallChasing", ReplyAction="http://tempuri.org/ILotteryService/RecallChasingResponse")]
        System.IAsyncResult BeginRecallChasing(zwg_china.client.framework.LotteryService.RecallChassingImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.LotteryService.NormalResult EndRecallChasing(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILotteryServiceChannel : zwg_china.client.framework.LotteryService.ILotteryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLotteriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLotteriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTopBonusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTopBonusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChasingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChasingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.NormalResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.NormalResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecallBettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecallBettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.NormalResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.NormalResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecallChasingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecallChasingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.LotteryService.NormalResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.LotteryService.NormalResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LotteryServiceClient : System.ServiceModel.ClientBase<zwg_china.client.framework.LotteryService.ILotteryService>, zwg_china.client.framework.LotteryService.ILotteryService {
        
        private BeginOperationDelegate onBeginGetTicketsDelegate;
        
        private EndOperationDelegate onEndGetTicketsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTicketsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLotteriesDelegate;
        
        private EndOperationDelegate onEndGetLotteriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLotteriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTopBonusDelegate;
        
        private EndOperationDelegate onEndGetTopBonusDelegate;
        
        private System.Threading.SendOrPostCallback onGetTopBonusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBettingsDelegate;
        
        private EndOperationDelegate onEndGetBettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChasingsDelegate;
        
        private EndOperationDelegate onEndGetChasingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetChasingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginBetDelegate;
        
        private EndOperationDelegate onEndBetDelegate;
        
        private System.Threading.SendOrPostCallback onBetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecallBettingDelegate;
        
        private EndOperationDelegate onEndRecallBettingDelegate;
        
        private System.Threading.SendOrPostCallback onRecallBettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecallChasingDelegate;
        
        private EndOperationDelegate onEndRecallChasingDelegate;
        
        private System.Threading.SendOrPostCallback onRecallChasingCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LotteryServiceClient() {
        }
        
        public LotteryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LotteryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LotteryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LotteryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetTicketsCompletedEventArgs> GetTicketsCompleted;
        
        public event System.EventHandler<GetLotteriesCompletedEventArgs> GetLotteriesCompleted;
        
        public event System.EventHandler<GetTopBonusCompletedEventArgs> GetTopBonusCompleted;
        
        public event System.EventHandler<GetBettingsCompletedEventArgs> GetBettingsCompleted;
        
        public event System.EventHandler<GetChasingsCompletedEventArgs> GetChasingsCompleted;
        
        public event System.EventHandler<BetCompletedEventArgs> BetCompleted;
        
        public event System.EventHandler<RecallBettingCompletedEventArgs> RecallBettingCompleted;
        
        public event System.EventHandler<RecallChasingCompletedEventArgs> RecallChasingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginGetTickets(zwg_china.client.framework.LotteryService.GetTicketsImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTickets(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4 zwg_china.client.framework.LotteryService.ILotteryService.EndGetTickets(System.IAsyncResult result) {
            return base.Channel.EndGetTickets(result);
        }
        
        private System.IAsyncResult OnBeginGetTickets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.GetTicketsImport import = ((zwg_china.client.framework.LotteryService.GetTicketsImport)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginGetTickets(import, callback, asyncState);
        }
        
        private object[] OnEndGetTickets(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4 retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndGetTickets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTicketsCompleted(object state) {
            if ((this.GetTicketsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTicketsCompleted(this, new GetTicketsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTicketsAsync(zwg_china.client.framework.LotteryService.GetTicketsImport import) {
            this.GetTicketsAsync(import, null);
        }
        
        public void GetTicketsAsync(zwg_china.client.framework.LotteryService.GetTicketsImport import, object userState) {
            if ((this.onBeginGetTicketsDelegate == null)) {
                this.onBeginGetTicketsDelegate = new BeginOperationDelegate(this.OnBeginGetTickets);
            }
            if ((this.onEndGetTicketsDelegate == null)) {
                this.onEndGetTicketsDelegate = new EndOperationDelegate(this.OnEndGetTickets);
            }
            if ((this.onGetTicketsCompletedDelegate == null)) {
                this.onGetTicketsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTicketsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTicketsDelegate, new object[] {
                        import}, this.onEndGetTicketsDelegate, this.onGetTicketsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginGetLotteries(zwg_china.client.framework.LotteryService.GetLotteriesImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLotteries(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4 zwg_china.client.framework.LotteryService.ILotteryService.EndGetLotteries(System.IAsyncResult result) {
            return base.Channel.EndGetLotteries(result);
        }
        
        private System.IAsyncResult OnBeginGetLotteries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.GetLotteriesImport import = ((zwg_china.client.framework.LotteryService.GetLotteriesImport)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginGetLotteries(import, callback, asyncState);
        }
        
        private object[] OnEndGetLotteries(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4 retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndGetLotteries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLotteriesCompleted(object state) {
            if ((this.GetLotteriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLotteriesCompleted(this, new GetLotteriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLotteriesAsync(zwg_china.client.framework.LotteryService.GetLotteriesImport import) {
            this.GetLotteriesAsync(import, null);
        }
        
        public void GetLotteriesAsync(zwg_china.client.framework.LotteryService.GetLotteriesImport import, object userState) {
            if ((this.onBeginGetLotteriesDelegate == null)) {
                this.onBeginGetLotteriesDelegate = new BeginOperationDelegate(this.OnBeginGetLotteries);
            }
            if ((this.onEndGetLotteriesDelegate == null)) {
                this.onEndGetLotteriesDelegate = new EndOperationDelegate(this.OnEndGetLotteries);
            }
            if ((this.onGetLotteriesCompletedDelegate == null)) {
                this.onGetLotteriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLotteriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLotteriesDelegate, new object[] {
                        import}, this.onEndGetLotteriesDelegate, this.onGetLotteriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginGetTopBonus(zwg_china.client.framework.LotteryService.GetTopBonusImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTopBonus(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4 zwg_china.client.framework.LotteryService.ILotteryService.EndGetTopBonus(System.IAsyncResult result) {
            return base.Channel.EndGetTopBonus(result);
        }
        
        private System.IAsyncResult OnBeginGetTopBonus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.GetTopBonusImport import = ((zwg_china.client.framework.LotteryService.GetTopBonusImport)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginGetTopBonus(import, callback, asyncState);
        }
        
        private object[] OnEndGetTopBonus(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4 retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndGetTopBonus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTopBonusCompleted(object state) {
            if ((this.GetTopBonusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTopBonusCompleted(this, new GetTopBonusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTopBonusAsync(zwg_china.client.framework.LotteryService.GetTopBonusImport import) {
            this.GetTopBonusAsync(import, null);
        }
        
        public void GetTopBonusAsync(zwg_china.client.framework.LotteryService.GetTopBonusImport import, object userState) {
            if ((this.onBeginGetTopBonusDelegate == null)) {
                this.onBeginGetTopBonusDelegate = new BeginOperationDelegate(this.OnBeginGetTopBonus);
            }
            if ((this.onEndGetTopBonusDelegate == null)) {
                this.onEndGetTopBonusDelegate = new EndOperationDelegate(this.OnEndGetTopBonus);
            }
            if ((this.onGetTopBonusCompletedDelegate == null)) {
                this.onGetTopBonusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTopBonusCompleted);
            }
            base.InvokeAsync(this.onBeginGetTopBonusDelegate, new object[] {
                        import}, this.onEndGetTopBonusDelegate, this.onGetTopBonusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginGetBettings(zwg_china.client.framework.LotteryService.GetBettingsImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBettings(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4 zwg_china.client.framework.LotteryService.ILotteryService.EndGetBettings(System.IAsyncResult result) {
            return base.Channel.EndGetBettings(result);
        }
        
        private System.IAsyncResult OnBeginGetBettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.GetBettingsImport import = ((zwg_china.client.framework.LotteryService.GetBettingsImport)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginGetBettings(import, callback, asyncState);
        }
        
        private object[] OnEndGetBettings(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4 retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndGetBettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBettingsCompleted(object state) {
            if ((this.GetBettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBettingsCompleted(this, new GetBettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBettingsAsync(zwg_china.client.framework.LotteryService.GetBettingsImport import) {
            this.GetBettingsAsync(import, null);
        }
        
        public void GetBettingsAsync(zwg_china.client.framework.LotteryService.GetBettingsImport import, object userState) {
            if ((this.onBeginGetBettingsDelegate == null)) {
                this.onBeginGetBettingsDelegate = new BeginOperationDelegate(this.OnBeginGetBettings);
            }
            if ((this.onEndGetBettingsDelegate == null)) {
                this.onEndGetBettingsDelegate = new EndOperationDelegate(this.OnEndGetBettings);
            }
            if ((this.onGetBettingsCompletedDelegate == null)) {
                this.onGetBettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBettingsDelegate, new object[] {
                        import}, this.onEndGetBettingsDelegate, this.onGetBettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginGetChasings(zwg_china.client.framework.LotteryService.GetChasingsImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChasings(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4 zwg_china.client.framework.LotteryService.ILotteryService.EndGetChasings(System.IAsyncResult result) {
            return base.Channel.EndGetChasings(result);
        }
        
        private System.IAsyncResult OnBeginGetChasings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.GetChasingsImport import = ((zwg_china.client.framework.LotteryService.GetChasingsImport)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginGetChasings(import, callback, asyncState);
        }
        
        private object[] OnEndGetChasings(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4 retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndGetChasings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChasingsCompleted(object state) {
            if ((this.GetChasingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChasingsCompleted(this, new GetChasingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChasingsAsync(zwg_china.client.framework.LotteryService.GetChasingsImport import) {
            this.GetChasingsAsync(import, null);
        }
        
        public void GetChasingsAsync(zwg_china.client.framework.LotteryService.GetChasingsImport import, object userState) {
            if ((this.onBeginGetChasingsDelegate == null)) {
                this.onBeginGetChasingsDelegate = new BeginOperationDelegate(this.OnBeginGetChasings);
            }
            if ((this.onEndGetChasingsDelegate == null)) {
                this.onEndGetChasingsDelegate = new EndOperationDelegate(this.OnEndGetChasings);
            }
            if ((this.onGetChasingsCompletedDelegate == null)) {
                this.onGetChasingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChasingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetChasingsDelegate, new object[] {
                        import}, this.onEndGetChasingsDelegate, this.onGetChasingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginBet(zwg_china.client.framework.LotteryService.BetImpoert import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBet(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.NormalResult zwg_china.client.framework.LotteryService.ILotteryService.EndBet(System.IAsyncResult result) {
            return base.Channel.EndBet(result);
        }
        
        private System.IAsyncResult OnBeginBet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.BetImpoert import = ((zwg_china.client.framework.LotteryService.BetImpoert)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginBet(import, callback, asyncState);
        }
        
        private object[] OnEndBet(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.NormalResult retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndBet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBetCompleted(object state) {
            if ((this.BetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BetCompleted(this, new BetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BetAsync(zwg_china.client.framework.LotteryService.BetImpoert import) {
            this.BetAsync(import, null);
        }
        
        public void BetAsync(zwg_china.client.framework.LotteryService.BetImpoert import, object userState) {
            if ((this.onBeginBetDelegate == null)) {
                this.onBeginBetDelegate = new BeginOperationDelegate(this.OnBeginBet);
            }
            if ((this.onEndBetDelegate == null)) {
                this.onEndBetDelegate = new EndOperationDelegate(this.OnEndBet);
            }
            if ((this.onBetCompletedDelegate == null)) {
                this.onBetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBetCompleted);
            }
            base.InvokeAsync(this.onBeginBetDelegate, new object[] {
                        import}, this.onEndBetDelegate, this.onBetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginRecallBetting(zwg_china.client.framework.LotteryService.RecallBettingImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecallBetting(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.NormalResult zwg_china.client.framework.LotteryService.ILotteryService.EndRecallBetting(System.IAsyncResult result) {
            return base.Channel.EndRecallBetting(result);
        }
        
        private System.IAsyncResult OnBeginRecallBetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.RecallBettingImport import = ((zwg_china.client.framework.LotteryService.RecallBettingImport)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginRecallBetting(import, callback, asyncState);
        }
        
        private object[] OnEndRecallBetting(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.NormalResult retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndRecallBetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecallBettingCompleted(object state) {
            if ((this.RecallBettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecallBettingCompleted(this, new RecallBettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecallBettingAsync(zwg_china.client.framework.LotteryService.RecallBettingImport import) {
            this.RecallBettingAsync(import, null);
        }
        
        public void RecallBettingAsync(zwg_china.client.framework.LotteryService.RecallBettingImport import, object userState) {
            if ((this.onBeginRecallBettingDelegate == null)) {
                this.onBeginRecallBettingDelegate = new BeginOperationDelegate(this.OnBeginRecallBetting);
            }
            if ((this.onEndRecallBettingDelegate == null)) {
                this.onEndRecallBettingDelegate = new EndOperationDelegate(this.OnEndRecallBetting);
            }
            if ((this.onRecallBettingCompletedDelegate == null)) {
                this.onRecallBettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecallBettingCompleted);
            }
            base.InvokeAsync(this.onBeginRecallBettingDelegate, new object[] {
                        import}, this.onEndRecallBettingDelegate, this.onRecallBettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.LotteryService.ILotteryService.BeginRecallChasing(zwg_china.client.framework.LotteryService.RecallChassingImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecallChasing(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.LotteryService.NormalResult zwg_china.client.framework.LotteryService.ILotteryService.EndRecallChasing(System.IAsyncResult result) {
            return base.Channel.EndRecallChasing(result);
        }
        
        private System.IAsyncResult OnBeginRecallChasing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.LotteryService.RecallChassingImport import = ((zwg_china.client.framework.LotteryService.RecallChassingImport)(inValues[0]));
            return ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).BeginRecallChasing(import, callback, asyncState);
        }
        
        private object[] OnEndRecallChasing(System.IAsyncResult result) {
            zwg_china.client.framework.LotteryService.NormalResult retVal = ((zwg_china.client.framework.LotteryService.ILotteryService)(this)).EndRecallChasing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecallChasingCompleted(object state) {
            if ((this.RecallChasingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecallChasingCompleted(this, new RecallChasingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecallChasingAsync(zwg_china.client.framework.LotteryService.RecallChassingImport import) {
            this.RecallChasingAsync(import, null);
        }
        
        public void RecallChasingAsync(zwg_china.client.framework.LotteryService.RecallChassingImport import, object userState) {
            if ((this.onBeginRecallChasingDelegate == null)) {
                this.onBeginRecallChasingDelegate = new BeginOperationDelegate(this.OnBeginRecallChasing);
            }
            if ((this.onEndRecallChasingDelegate == null)) {
                this.onEndRecallChasingDelegate = new EndOperationDelegate(this.OnEndRecallChasing);
            }
            if ((this.onRecallChasingCompletedDelegate == null)) {
                this.onRecallChasingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecallChasingCompleted);
            }
            base.InvokeAsync(this.onBeginRecallChasingDelegate, new object[] {
                        import}, this.onEndRecallChasingDelegate, this.onRecallChasingCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override zwg_china.client.framework.LotteryService.ILotteryService CreateChannel() {
            return new LotteryServiceClientChannel(this);
        }
        
        private class LotteryServiceClientChannel : ChannelBase<zwg_china.client.framework.LotteryService.ILotteryService>, zwg_china.client.framework.LotteryService.ILotteryService {
            
            public LotteryServiceClientChannel(System.ServiceModel.ClientBase<zwg_china.client.framework.LotteryService.ILotteryService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetTickets(zwg_china.client.framework.LotteryService.GetTicketsImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("GetTickets", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4 EndGetTickets(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4 _result = ((zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryTicketExport1C_S7RQu4)(base.EndInvoke("GetTickets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLotteries(zwg_china.client.framework.LotteryService.GetLotteriesImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("GetLotteries", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4 EndGetLotteries(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4 _result = ((zwg_china.client.framework.LotteryService.NormalResultOfArrayOfLotteryExport1C_S7RQu4)(base.EndInvoke("GetLotteries", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTopBonus(zwg_china.client.framework.LotteryService.GetTopBonusImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("GetTopBonus", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4 EndGetTopBonus(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4 _result = ((zwg_china.client.framework.LotteryService.NormalResultOfArrayOfTopBonus1C_S7RQu4)(base.EndInvoke("GetTopBonus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBettings(zwg_china.client.framework.LotteryService.GetBettingsImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("GetBettings", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4 EndGetBettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4 _result = ((zwg_china.client.framework.LotteryService.PageResultOfBettingExport1C_S7RQu4)(base.EndInvoke("GetBettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChasings(zwg_china.client.framework.LotteryService.GetChasingsImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("GetChasings", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4 EndGetChasings(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4 _result = ((zwg_china.client.framework.LotteryService.PageResultOfChasingExport1C_S7RQu4)(base.EndInvoke("GetChasings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBet(zwg_china.client.framework.LotteryService.BetImpoert import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("Bet", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.NormalResult EndBet(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.NormalResult _result = ((zwg_china.client.framework.LotteryService.NormalResult)(base.EndInvoke("Bet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecallBetting(zwg_china.client.framework.LotteryService.RecallBettingImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("RecallBetting", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.NormalResult EndRecallBetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.NormalResult _result = ((zwg_china.client.framework.LotteryService.NormalResult)(base.EndInvoke("RecallBetting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecallChasing(zwg_china.client.framework.LotteryService.RecallChassingImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("RecallChasing", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.LotteryService.NormalResult EndRecallChasing(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.LotteryService.NormalResult _result = ((zwg_china.client.framework.LotteryService.NormalResult)(base.EndInvoke("RecallChasing", _args, result)));
                return _result;
            }
        }
    }
}
