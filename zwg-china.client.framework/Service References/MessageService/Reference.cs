//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34003
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace zwg_china.client.framework.MessageService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportBase", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.MessageService.ImportBaseOfMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.MessageService.GetBulletinsImport))]
    public partial class ImportBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportBaseOfMessage", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.MessageService.GetBulletinsImport))]
    public partial class ImportBaseOfMessage : zwg_china.client.framework.MessageService.ImportBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBulletinsImport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class GetBulletinsImport : zwg_china.client.framework.MessageService.ImportBaseOfMessage {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalResult", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4))]
    public partial class NormalResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NormalResultOfArrayOfBulletinExport1C_S7RQu4", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service")]
    public partial class NormalResultOfArrayOfBulletinExport1C_S7RQu4 : zwg_china.client.framework.MessageService.NormalResult {
        
        private System.Collections.Generic.List<zwg_china.client.framework.MessageService.BulletinExport> InfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<zwg_china.client.framework.MessageService.BulletinExport> Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BulletinExport", Namespace="http://schemas.datacontract.org/2004/07/zwg_china.service.client")]
    public partial class BulletinExport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContextField;
        
        private int IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageService.IMessageService")]
    public interface IMessageService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetBulletins", ReplyAction="http://tempuri.org/IMessageService/GetBulletinsResponse")]
        System.IAsyncResult BeginGetBulletins(zwg_china.client.framework.MessageService.GetBulletinsImport import, System.AsyncCallback callback, object asyncState);
        
        zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4 EndGetBulletins(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceChannel : zwg_china.client.framework.MessageService.IMessageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBulletinsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBulletinsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageServiceClient : System.ServiceModel.ClientBase<zwg_china.client.framework.MessageService.IMessageService>, zwg_china.client.framework.MessageService.IMessageService {
        
        private BeginOperationDelegate onBeginGetBulletinsDelegate;
        
        private EndOperationDelegate onEndGetBulletinsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBulletinsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MessageServiceClient() {
        }
        
        public MessageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetBulletinsCompletedEventArgs> GetBulletinsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult zwg_china.client.framework.MessageService.IMessageService.BeginGetBulletins(zwg_china.client.framework.MessageService.GetBulletinsImport import, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBulletins(import, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4 zwg_china.client.framework.MessageService.IMessageService.EndGetBulletins(System.IAsyncResult result) {
            return base.Channel.EndGetBulletins(result);
        }
        
        private System.IAsyncResult OnBeginGetBulletins(object[] inValues, System.AsyncCallback callback, object asyncState) {
            zwg_china.client.framework.MessageService.GetBulletinsImport import = ((zwg_china.client.framework.MessageService.GetBulletinsImport)(inValues[0]));
            return ((zwg_china.client.framework.MessageService.IMessageService)(this)).BeginGetBulletins(import, callback, asyncState);
        }
        
        private object[] OnEndGetBulletins(System.IAsyncResult result) {
            zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4 retVal = ((zwg_china.client.framework.MessageService.IMessageService)(this)).EndGetBulletins(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBulletinsCompleted(object state) {
            if ((this.GetBulletinsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBulletinsCompleted(this, new GetBulletinsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBulletinsAsync(zwg_china.client.framework.MessageService.GetBulletinsImport import) {
            this.GetBulletinsAsync(import, null);
        }
        
        public void GetBulletinsAsync(zwg_china.client.framework.MessageService.GetBulletinsImport import, object userState) {
            if ((this.onBeginGetBulletinsDelegate == null)) {
                this.onBeginGetBulletinsDelegate = new BeginOperationDelegate(this.OnBeginGetBulletins);
            }
            if ((this.onEndGetBulletinsDelegate == null)) {
                this.onEndGetBulletinsDelegate = new EndOperationDelegate(this.OnEndGetBulletins);
            }
            if ((this.onGetBulletinsCompletedDelegate == null)) {
                this.onGetBulletinsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBulletinsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBulletinsDelegate, new object[] {
                        import}, this.onEndGetBulletinsDelegate, this.onGetBulletinsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override zwg_china.client.framework.MessageService.IMessageService CreateChannel() {
            return new MessageServiceClientChannel(this);
        }
        
        private class MessageServiceClientChannel : ChannelBase<zwg_china.client.framework.MessageService.IMessageService>, zwg_china.client.framework.MessageService.IMessageService {
            
            public MessageServiceClientChannel(System.ServiceModel.ClientBase<zwg_china.client.framework.MessageService.IMessageService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBulletins(zwg_china.client.framework.MessageService.GetBulletinsImport import, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = import;
                System.IAsyncResult _result = base.BeginInvoke("GetBulletins", _args, callback, asyncState);
                return _result;
            }
            
            public zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4 EndGetBulletins(System.IAsyncResult result) {
                object[] _args = new object[0];
                zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4 _result = ((zwg_china.client.framework.MessageService.NormalResultOfArrayOfBulletinExport1C_S7RQu4)(base.EndInvoke("GetBulletins", _args, result)));
                return _result;
            }
        }
    }
}
